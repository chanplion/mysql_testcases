#
# test of date
#
--source suite/sequoiadb_datatype/include/have_sequoiadb.inc

--disable_warnings
drop table if exists table_date_t1,table_date_t2;
--enable_warnings

create table table_date_t1 (a char(16), b date);
insert into table_date_t1 SET a='test 2000-01-01', b='2000-01-01';
select * from table_date_t1 where b = '2000-01-01';
drop table table_date_t1;

#
# problem with date conversions
#

CREATE TABLE table_date_t1 (name char(6), cdate date);
INSERT INTO table_date_t1 VALUES ('name1','1998-01-01');
INSERT INTO table_date_t1 VALUES ('name2','1998-01-01');
INSERT INTO table_date_t1 VALUES ('name1','1998-01-02');
INSERT INTO table_date_t1 VALUES ('name2','1998-01-02');
CREATE TABLE table_date_t2 (cdate date, note char(6));
INSERT INTO table_date_t2 VALUES ('1998-01-01','note01');
INSERT INTO table_date_t2 VALUES ('1998-01-02','note02');
select name,table_date_t1.cdate,note from table_date_t1,table_date_t2 where table_date_t1.cdate=table_date_t2.cdate and table_date_t1.cdate='1998-01-01' order by cdate;
drop table table_date_t1,table_date_t2;

#
# Date and BETWEEN
#

CREATE TABLE table_date_t1 ( datum DATE );
INSERT INTO table_date_t1 VALUES ( "2000-1-1" );
INSERT INTO table_date_t1 VALUES ( "2000-1-2" );
INSERT INTO table_date_t1 VALUES ( "2000-1-3" );
INSERT INTO table_date_t1 VALUES ( "2000-1-4" );
INSERT INTO table_date_t1 VALUES ( "2000-1-5" );
SELECT * FROM table_date_t1 WHERE datum BETWEEN cast("2000-1-2" as date) AND cast("2000-1-4" as date) order by datum;
SELECT * FROM table_date_t1 WHERE datum BETWEEN cast("2000-1-2" as date) AND datum - INTERVAL 100 DAY order by datum;
DROP TABLE table_date_t1;

#
# test of max(date) and having
#

CREATE TABLE table_date_t1 (
  user_id char(10),
  summa int(11),
  rdate date
);
INSERT INTO table_date_t1 VALUES ('aaa',100,'1998-01-01');
INSERT INTO table_date_t1 VALUES ('aaa',200,'1998-01-03');
INSERT INTO table_date_t1 VALUES ('bbb',50,'1998-01-02');
INSERT INTO table_date_t1 VALUES ('bbb',200,'1998-01-04');
select max(rdate) as s from table_date_t1 where rdate < '1998-01-03' having s> "1998-01-01";
select max(rdate) as s from table_date_t1 having s="1998-01-04";
select max(rdate+0) as s from table_date_t1 having s="19980104";
drop table table_date_t1;

#
# Test of date and not null
#

create table table_date_t1 (date date);
insert into table_date_t1 values ("2000-08-10"),("2000-08-11");
select date_add(date,INTERVAL 1 DAY),date_add(date,INTERVAL 1 SECOND) from table_date_t1;
drop table table_date_t1;

#
# Test problem with DATE_FORMAT
#

CREATE TABLE table_date_t1(AFIELD INT);
INSERT INTO table_date_t1 VALUES(1);
CREATE TABLE table_date_t2(GMT  VARCHAR(32));
INSERT INTO table_date_t2 VALUES('GMT-0800');
--source include/turn_off_only_full_group_by.inc
SELECT DATE_FORMAT("2002-03-06 10:11:12", CONCAT('%a, %d %M %Y %H:%i:%s ', table_date_t2.GMT))
FROM table_date_t1, table_date_t2 GROUP BY table_date_t1.AFIELD;
INSERT INTO table_date_t1 VALUES(1);
SELECT DATE_FORMAT("2002-03-06 10:11:12", CONCAT('%a, %d %M %Y %H:%i:%s ', table_date_t2.GMT)),
       DATE_FORMAT("2002-03-06 10:11:12", CONCAT('%a, %d %M %Y %H:%i:%s ', table_date_t2.GMT))
FROM table_date_t1,table_date_t2 GROUP BY table_date_t1.AFIELD;
--source include/restore_sql_mode_after_turn_off_only_full_group_by.inc
drop table table_date_t1,table_date_t2;

#
# Bug#4937: different date -> string conversion when using SELECT ... UNION
# and INSERT ... SELECT ... UNION
#

CREATE TABLE table_date_t1 (f1 DATE);
CREATE TABLE table_date_t2 (f2 VARCHAR(8));
CREATE TABLE table_date_t3 (f2 CHAR(8));

INSERT INTO table_date_t1 VALUES ('1978-11-26');
INSERT INTO table_date_t2 SELECT f1+0 FROM table_date_t1;
INSERT INTO table_date_t2 SELECT f1+0 FROM table_date_t1 UNION SELECT f1+0 FROM table_date_t1;
INSERT INTO table_date_t3 SELECT f1+0 FROM table_date_t1;
INSERT INTO table_date_t3 SELECT f1+0 FROM table_date_t1 UNION SELECT f1+0 FROM table_date_t1;
SELECT * FROM table_date_t2 order by f2;
SELECT * FROM table_date_t3 order by f2;

DROP TABLE table_date_t1, table_date_t2, table_date_t3;

#
# Bug#21677: Wrong result when comparing a DATE and a DATETIME in BETWEEN
#
create table table_date_t1(start_date date, end_date date);
insert into table_date_t1 values ('2000-01-01','2000-01-02');
select 1 from table_date_t1 where cast('2000-01-01 12:01:01' as datetime) between start_date and end_date;
drop table table_date_t1;
# End of 4.1 tests

#
# Bug#31221: Optimizer incorrectly identifies impossible WHERE clause
#

CREATE TABLE table_date_t1 (a DATE, b INT);
## The current sub test could fail (difference to expected result) if we
## have just reached midnight.
## (Bug#41776 type_date.test may fail if run around midnight)
## Therefore we sleep a bit if we are too close to midnight.
## The complete test itself needs in average less than 1 second.
## Therefore a time_distance to midnight of 5 seconds should be sufficient.
if (`SELECT CURTIME() > SEC_TO_TIME(24 * 3600 - 5)`)
{
   # We are here when CURTIME() is between '23:59:56' and '23:59:59'.
   # So a sleep time of 5 seconds brings us between '00:00:01' and '00:00:04'.
   --real_sleep 5
}
INSERT INTO table_date_t1 VALUES (DATE(NOW()), 1);
SELECT COUNT(*) FROM table_date_t1 WHERE a = NOW();
EXPLAIN SELECT COUNT(*) FROM table_date_t1 WHERE a = NOW();
INSERT INTO table_date_t1 VALUES (DATE(NOW()), 2);
SELECT COUNT(*) FROM table_date_t1 WHERE a = NOW();
EXPLAIN SELECT COUNT(*) FROM table_date_t1 WHERE a = NOW();
--disable_warnings
SELECT COUNT(*) FROM table_date_t1 WHERE a = NOW() AND b = 1;
EXPLAIN SELECT COUNT(*) FROM table_date_t1 WHERE a = NOW() AND b = 1;
--enable_warnings
SELECT COUNT(*) FROM table_date_t1 WHERE a = NOW();
EXPLAIN SELECT COUNT(*) FROM table_date_t1 WHERE a = NOW();

DROP TABLE table_date_t1;

#
# Bug#28687: Search fails on '0000-00-00' date after sql_mode change
#

CREATE TABLE table_date_t1 (a DATE);
CREATE TABLE table_date_t2 (a DATE);
INSERT IGNORE INTO table_date_t1 VALUES ('0000-00-00'),('0000-00-00');
INSERT IGNORE INTO table_date_t2 VALUES ('0000-00-00'),('0000-00-00');
SELECT * FROM table_date_t1 WHERE a = '0000-00-00';
SELECT * FROM table_date_t2 WHERE a = '0000-00-00';
SET SQL_MODE=TRADITIONAL;
EXPLAIN SELECT * FROM table_date_t1 WHERE a = '0000-00-00';
SELECT * FROM table_date_t1 WHERE a = '0000-00-00';
SELECT * FROM table_date_t2 WHERE a = '0000-00-00';
--error ER_TRUNCATED_WRONG_VALUE
INSERT INTO table_date_t1 VALUES ('0000-00-00');
SET SQL_MODE=DEFAULT;
DROP TABLE table_date_t1,table_date_t2;

#
# Bug #31928: Search fails on '1000-00-00' date after sql_mode change
#

CREATE TABLE table_date_t1 (a DATE);
CREATE TABLE table_date_t2 (a DATE);
INSERT IGNORE INTO table_date_t1 VALUES ('1000-00-00'),('1000-00-00');
INSERT IGNORE INTO table_date_t2 VALUES ('1000-00-00'),('1000-00-00');
SELECT * FROM table_date_t1 WHERE a = '1000-00-00';
SELECT * FROM table_date_t2 WHERE a = '1000-00-00';
SET SQL_MODE=TRADITIONAL;
EXPLAIN SELECT * FROM table_date_t1 WHERE a = '1000-00-00';
SELECT * FROM table_date_t1 WHERE a = '1000-00-00';
SELECT * FROM table_date_t2 WHERE a = '1000-00-00';
--error ER_TRUNCATED_WRONG_VALUE
INSERT INTO table_date_t1 VALUES ('1000-00-00');
SET SQL_MODE=DEFAULT;
DROP TABLE table_date_t1,table_date_t2;

#
# Bug #31990: MINUTE() and SECOND() return bogus results when used on a DATE
#

CREATE TABLE table_date_t1 SELECT curdate() AS f1;
SELECT hour(f1), minute(f1), second(f1) FROM table_date_t1;
DROP TABLE table_date_t1;

--echo End of 5.0 tests

#
# Bug#32021: Using Date 000-00-01 in WHERE causes wrong result
#
create table table_date_t1 (a date) engine = sequoiadb;
--error 1292
insert into table_date_t1 values ('0000-01-01'), ('0000-00-01'), ('0001-01-01');
select * from table_date_t1 where a between '0000-00-01' and '0000-00-02';
drop table table_date_t1;

--echo #
--echo # Bug #33629: last_day function can return null, but has 'not null'
--echo #             flag set for result
--echo #

SELECT 1 FROM (SELECT LAST_DAY('0')) a;
SELECT 1 FROM (SELECT MAKEDATE(2011,0)) a;

CREATE TABLE table_date_t1 AS
  SELECT LAST_DAY('1970-01-01') AS f1,
         MAKEDATE(1970, 1)      AS f2;
DESCRIBE table_date_t1;
DROP TABLE table_date_t1;

--echo #
--echo # Testing cast from DECIMAL to DATE
--echo #
CREATE TABLE table_date_t1 (a DECIMAL(23,4));
INSERT INTO table_date_t1 VALUES (NULL),(101010.9999),(-101010.9999);
SELECT a, CAST(a AS DATE) FROM table_date_t1;
DROP TABLE table_date_t1;

--echo #
--echo # Testing CASE with DATE type without a found item
--echo #
SELECT CAST(CASE WHEN 0 THEN '2001-01-01' END AS DATE);
SELECT CAST(CASE WHEN 0 THEN DATE'2001-01-01' END AS DATE);

--echo #
--echo # Testing DATE field with NULL value with NOT IN
--echo #
CREATE TABLE table_date_t1 (a DATE);
INSERT INTO table_date_t1 VALUES (NULL);
SELECT * FROM table_date_t1 WHERE a NOT IN (DATE'2001-01-01',DATE'2002-02-02');
DROP TABLE table_date_t1;

#WL#8596 Turn STRICT_MODE submodes ON by Default
CREATE TABLE table_date_t1(a int);
--error ER_TRUNCATED_WRONG_VALUE
INSERT INTO table_date_t1 VALUE(15.00+adddate('2011-00-00', 1));
DROP TABLE table_date_t1;

# Remark
# Add range check
# create table and insert
create table table_date_t1 (a date);
insert into table_date_t1 values ('1000-01-01');
insert into table_date_t1 values ('2000-01-01');
insert into table_date_t1 values ('9999-12-31');
--error 1292
insert into table_date_t1 values ('abcd');
--error 1292
insert into table_date_t1 values ('99999-01-01');
select * from table_date_t1 order by a;

# update
update table_date_t1 set a = '2018-01-02' where a = '1000-01-01';
# select 
select * from table_date_t1 order by a;
# delete
delete from table_date_t1 where a = '1000-01-01';
# select
select * from table_date_t1 order by a;
drop table table_date_t1;

--source suite/sequoiadb_datatype/include/uninstall_sequoiadb.inc
