
# test null
--source suite/sequoiadb_datatype/include/have_sequoiadb.inc

--disable_warnings
drop table if exists table_null_t1, table_null_t2;
--enable_warnings

#
# Test problem med index on NULL columns and testing with =NULL;
#

CREATE TABLE table_null_t1 (
  indexed_field int default NULL,
  KEY indexed_field (indexed_field)
);
INSERT INTO table_null_t1 VALUES (NULL),(NULL);
SELECT * FROM table_null_t1 WHERE indexed_field=NULL;
SELECT * FROM table_null_t1 WHERE indexed_field IS NULL;
SELECT * FROM table_null_t1 WHERE indexed_field<=>NULL;
DROP TABLE table_null_t1;

#
# Testing of IFNULL
#
create table table_null_t1 (a int, b int) ;
insert into table_null_t1 values(20,null);
select table_null_t2.b, ifnull(table_null_t2.b,"this is null") from table_null_t1 as table_null_t2 left join table_null_t1 as t3 on
table_null_t2.b=t3.a;
select table_null_t2.b, ifnull(table_null_t2.b,"this is null") from table_null_t1 as table_null_t2 left join table_null_t1 as t3 on table_null_t2.b=t3.a order by 1;
insert into table_null_t1 values(10,null);
select table_null_t2.b, ifnull(table_null_t2.b,"this is null") from table_null_t1 as table_null_t2 left join table_null_t1 as t3 on table_null_t2.b=t3.a order by 1;
update table_null_t1 set a = -10 where b is null;
select * from table_null_t1 order by a;
delete from table_null_t1 where a > 0;
select * from table_null_t1 order by a;
drop table table_null_t1;

#
# Test inserting with NULL
#
set sql_mode = 'NO_ENGINE_SUBSTITUTION';
create table table_null_t1 (a varchar(16) not null default '', b smallint(6) not null default 0, c smallint(6) NOT NULL default 0);
INSERT INTO table_null_t1 SET a = "", c= 1;
--error 1048
INSERT INTO table_null_t1 (a) values (null);
--error 1048
INSERT INTO table_null_t1 (a) values (1/null);
#--error 1048
#INSERT INTO table_null_t1 (a) values (null),(null);
--error 1048
INSERT INTO table_null_t1 (b) values (null);
--error 1048
INSERT INTO table_null_t1 (b) values (1/null);
#--error 1048
#INSERT INTO table_null_t1 (b) values (null),(null);
--error 1048
INSERT INTO table_null_t1 (c) values (null);
--error 1048
INSERT INTO table_null_t1 (c) values (1/null);
#--error 1048
#INSERT INTO table_null_t1 (c) values (null),(null);
select * from table_null_t1;
drop table table_null_t1;
SET sql_mode = default;
#
# Test to check elimination of IS NULL predicate for a non-nullable attribute
# (bug #1990)  
#
create table table_null_t1 (a int not null, b int not null, index idx(a));
insert into table_null_t1 values
  (1,1), (2,2), (3,3), (4,4), (5,5), (6,6),
  (7,7), (8,8), (9,9), (10,10), (11,11), (12,12);
select * from table_null_t1 where a between 2 and 3 order by a;
select * from table_null_t1 where a between 2 and 3 or b is null order by a;
drop table table_null_t1;
select cast(NULL as signed);

#
# NULL has its own type BINARY(0) by default.
# But NULL should be weaker than a constant
# when mixing charsets/collations
#
set names latin2;
# Check that result type is taken from a non-null string
create table table_null_t1 select
  null as c00,
  if(1, null, 'string') as c01,
  if(0, null, 'string') as c02,
  ifnull(null, 'string') as c03,
  ifnull('string', null) as c04,
  case when 0 then null else 'string' end as c05,
  case when 1 then null else 'string' end as c06,
  coalesce(null, 'string') as c07,
  coalesce('string', null) as c08,
  least('string',null) as c09,
  least(null, 'string') as c10,
  greatest('string',null) as c11,
  greatest(null, 'string') as c12,
  nullif('string', null) as c13,
  nullif(null, 'string') as c14,
  trim('string' from null) as c15,
  trim(null from 'string') as c16,
  substring_index('string', null, 1) as c17,
  substring_index(null, 'string', 1) as c18,
  elt(1, null, 'string') as c19,
  elt(1, 'string', null) as c20,
  concat('string', null) as c21,
  concat(null, 'string') as c22,
  concat_ws('sep', 'string', null) as c23,
  concat_ws('sep', null, 'string') as c24,
  concat_ws(null, 'string', 'string') as c25,
  make_set(3, 'string', null) as c26,
  make_set(3, null, 'string') as c27,
  export_set(3, null, 'off', 'sep') as c29,
  export_set(3, 'on', null, 'sep') as c30,
  export_set(3, 'on', 'off', null) as c31,
  replace(null, 'from', 'to') as c32,
  replace('str', null, 'to') as c33,
  replace('str', 'from', null) as c34,
  insert('str', 1, 2, null) as c35,
  insert(null, 1, 2, 'str') as c36,
  lpad('str', 10, null) as c37,
  rpad(null, 10, 'str') as c38;
  
show create table table_null_t1;
drop table table_null_t1;

--echo #
--echo # Bug #31471: decimal_bin_size: Assertion `scale >= 0 &&
--echo #             precision > 0 && scale <= precision'
--echo #

CREATE TABLE table_null_t1 (a DECIMAL (1, 0) ZEROFILL, b DECIMAL (1, 0) ZEROFILL);
INSERT INTO table_null_t1 (a, b) VALUES (0, 0);

CREATE TABLE table_null_t2 SELECT IFNULL(a, b) FROM table_null_t1;
DESCRIBE table_null_t2;
DROP TABLE table_null_t2;

CREATE TABLE table_null_t2 SELECT IFNULL(a, NULL) FROM table_null_t1;
DESCRIBE table_null_t2;
DROP TABLE table_null_t2;

CREATE TABLE table_null_t2 SELECT IFNULL(NULL, b) FROM table_null_t1;
DESCRIBE table_null_t2;

DROP TABLE table_null_t1, table_null_t2;

--source suite/sequoiadb_datatype/include/uninstall_sequoiadb.inc

--echo # End of 5.0 tests
